name: Angular CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: '40 10 * * 4'

jobs:
  Run-tests-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci
        
      - name: Run tests and show coverage
        run: npm run test:coverage
    
      - name: Run Build
        run: npm run build
        
  Analyze-code-vulnerabilities:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript-typescript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  Eslint-code-smells:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read 
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install ESLint
        run: |
          npm install eslint@8.10.0
          npm install @microsoft/eslint-formatter-sarif@2.1.7

      - name: Run ESLint
        run: npx eslint .
          --config .eslintrc.js
          --ext .js,.jsx,.ts,.tsx
          --format @microsoft/eslint-formatter-sarif
          --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
    
  Acceptance-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          build: npm run build
          start: npm start
  
  Deploy-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: npm ci

      - name: Build app bundle
        run: npm run build:prod
      
      - name: Deploy to gh-pages
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          build_dir: dist/tp-agiles
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

